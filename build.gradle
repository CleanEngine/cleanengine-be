plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.cleanengine'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

  implementation 'org.springframework.boot:spring-boot-starter-websocket' // WS + STOMP

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.8'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'


	implementation 'com.squareup.okhttp3:okhttp:4.12.0'
	implementation 'com.google.code.gson:gson:2.13.1'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	runtimeOnly 'com.h2database:h2'
	implementation("org.mariadb.jdbc:mariadb-java-client:3.3.3")  // ← 드라이버
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Spring Security + OAuth2
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'
}

tasks.named('test') {
	useJUnitPlatform()
}
